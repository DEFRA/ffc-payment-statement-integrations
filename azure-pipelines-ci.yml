# Simple Azure pipeline to deploy a Logic App (Consumption) with source in GitHub

# Trigger on PR creation targetting main (or subsequent commits to PR)
trigger:
  - main

pr:
  - main

pool:
  vmImage: 'ubuntu-latest'

steps:
#  - task: NodeTool@0
#    displayName: 'Use Node.js'
#    inputs:
#      versionSpec: '16.*'

  - task: FuncToolsInstaller@0
    inputs:
      version: 'latest'

  - bash: |
      docker compose -f docker-compose-azurite.yml up -d

#  - bash: |
#      npm install -g azurite
#      mkdir azurite
#      azurite --silent --location azurite --debug azurite\debug.log &
#    displayName: 'Install and launch Azurite'

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: 'PaymentStatementIntegrations.Tests/PaymentStatementIntegrations.Tests.csproj'
      arguments: '--logger "trx;LogFileName=test_results.trx"'
    displayName: Run unit tests
  
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/test_results.trx'
      failTaskOnFailedTests: true

  - task: CopyFiles@2
    displayName: 'Create project folder'
    inputs:
      SourceFolder: '$(System.DefaultWorkingDirectory)/PaymentStatementIntegrations'
      Contents: |
        **
      TargetFolder: 'project_output'

  - task: ArchiveFiles@2
    displayName: 'Create project zip'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)/project_output'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@1
    displayName: 'Publish project zip artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: 'logicapp-artifact'
      publishLocation: 'pipeline'