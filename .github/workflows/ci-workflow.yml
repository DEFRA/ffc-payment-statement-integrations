# GitHub Actions workflow to build and test a Logic App (Standard)

name: CI - Build and test Logic App

#On create of PR into main - assuming main is a protected branch
on: workflow_dispatch
# push:
#   branches:
#     - main
#      - github-pipelines

env:
  tests-project-name: 'PaymentStatementIntegrations.Tests/PaymentStatementIntegrations.Tests.csproj'
  project-folder: 'PaymentStatementIntegrations'

jobs:
  build-and-test:
   runs-on: ubuntu-latest
   
   steps:

    # Check out files
    - name: Check out files
      uses: actions/checkout@v3

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Install dependencies
      run: dotnet restore ${{ env.tests-project-name }}

    - name: Build Tests
      run: dotnet build ${{ env.tests-project-name }} --no-restore

    - name: set up node
      uses: actions/setup-node@v3
      with:
          node-version: '16.x'

    - name: Install and run azurite
      run: |
        npm install -g azurite
        mkdir azurite
        azurite --silent --location azurite --debug azurite\debug.log &

    - name: Install Azure Function Core Tools
      run: |
        npm i -g azure-functions-core-tools@4 --unsafe-perm true

    # local.settings.json is updated when editing locally in the GUI designer. In case connection secrets get saved to it,
    # a copy (local.settings.unit-tests.json) is pushed to GitHub but not local.settings.json
    # Here, that copy is renamed to be used in the unit testing
    - name: 'Use local.settings'
      run: |
        mv ${{ github.workspace }}/PaymentStatementIntegrations/local.settings.unit-tests.json ${{ github.workspace }}/PaymentStatementIntegrations/local.settings.json
      
    - name: Run Tests
      run: dotnet test ${{ env.tests-project-name }} --no-restore --logger "trx;LogFileName=test-results.trx"

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Results
        path: "**/test-results.trx"                            
        reporter: dotnet-trx
        fail-on-error: true      

    - name: 'Copy variables for artifact'
      run: |
        mkdir ./${{ env.project-folder}}/github/variables
        mv ${{ github.workspace }}/.github/variables/*.* ./${{ env.project-folder}}/github/variables

    - name: Zip Files
      uses: vimtor/action-zip@v1
      with:
        dest: ${{ github.run_id }}.zip
        files: ./${{ env.project-folder}}

    - name: Publish artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: ${{ github.run_id }}.zip