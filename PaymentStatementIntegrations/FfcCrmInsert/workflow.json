{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Catch_Scope": {
                "type": "Scope",
                "actions": {
                    "Append_error_text": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "ProgressText",
                            "value": ": @{outputs('Strip_sensitive_data')}"
                        },
                        "runAfter": {
                            "Strip_sensitive_data": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Dead-letter_the_message": {
                        "type": "ServiceProvider",
                        "inputs": {
                            "parameters": {
                                "messageId": "@triggerBody()?['messageId']",
                                "deadLetterReason": "Workflow failed to complete - error in TryScope",
                                "deadLetterErrorDescription": "@substring(variables('ProgressText'), 0, min(length(variables('ProgressText')), 4096))"
                            },
                            "serviceProviderConfiguration": {
                                "connectionName": "serviceBus",
                                "operationId": "deadLetterMessage",
                                "serviceProviderId": "/serviceProviders/serviceBus"
                            }
                        },
                        "runAfter": {
                            "Append_error_text": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Throw_workflow_failure": {
                        "type": "Compose",
                        "inputs": "@int('__FINAL_ERROR__')",
                        "runAfter": {
                            "Dead-letter_the_message": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Strip_sensitive_data": {
                        "type": "JavaScriptCode",
                        "inputs": {
                            "code": "// This code snippet removes any sensitive token values if defined\n\n// List of tokens with their terminating char - defined in pairs\nvar sensitiveTokens = [ 'client_secret=', '&', 'client_id=', '&', 'Authorization\":', '}' ];\nvar errorStack = JSON.stringify(workflowContext.actions.Get_error_stack.outputs);\ntry {\n    for (var i=0; i < sensitiveTokens.length; i = i + 2) {\n        var tok = sensitiveTokens[i];\n        var tokLen = tok.length;\n        var tokPos = errorStack.indexOf(tok);\n        var endPos = errorStack.indexOf(sensitiveTokens[i+1],tokPos + 1);\n        if (tokPos > -1) {\n            if (endPos > -1) {\n                errorStack = errorStack.substring(0, tokPos + tokLen) +\n                    '******' +\n                    errorStack.substring(endPos);\n            } else {\n                errorStack = errorStack.substring(0, tokPos + tokLen) +\n                    '******';\n            }\n        }\n    }\n}\ncatch (err) {\n  // Do nothing\n}\nreturn errorStack;"
                        },
                        "runAfter": {
                            "Get_error_stack": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Get_error_stack": {
                        "type": "Query",
                        "inputs": {
                            "from": "@result('Try_Scope')",
                            "where": "@equals(item()?['status'],'Failed')"
                        },
                        "runtimeConfiguration": {
                            "secureData": {
                                "properties": [
                                    "inputs",
                                    "outputs"
                                ]
                            }
                        }
                    }
                },
                "runAfter": {
                    "Try_Scope": [
                        "FAILED",
                        "TIMEDOUT"
                    ]
                }
            },
            "Initialize_Progress": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "ProgressText",
                            "type": "string",
                            "value": "Started"
                        }
                    ]
                },
                "runAfter": {},
                "trackedProperties": {
                    "WorkflowName": "FfcCrmInsert"
                }
            },
            "Initialize_activity_id": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "NewActivityId",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_case_id": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_case_id": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "NewCaseId",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_org_id": [
                        "SUCCEEDED"
                    ]
                },
                "trackedProperties": {}
            },
            "Initialize_filename": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "Filename",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_activity_id": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_org_id": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "OrganisationId",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_year": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_variable": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "FinalErrorText",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_filename": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_year": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "PayloadYear",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_Progress": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Parse_Payload_JSON": {
                "type": "ParseJson",
                "inputs": {
                    "content": "@triggerBody()?['contentData']",
                    "schema": {
                        "properties": {
                            "apiLink": {
                                "type": "string"
                            },
                            "documentType": {
                                "type": "string"
                            },
                            "frn": {
                                "type": "integer"
                            },
                            "sbi": {
                                "type": "integer"
                            },
                            "scheme": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Initialize_variable": [
                        "SUCCEEDED"
                    ]
                },
                "trackedProperties": {}
            },
            "Try_Scope": {
                "type": "Scope",
                "actions": {
                    "Append_progess_activity_id": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "ProgressText",
                            "value": ": created activity id @{variables('NewActivityId')}"
                        },
                        "runAfter": {
                            "Extract_activity_id": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Append_progress_case_id": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "ProgressText",
                            "value": ": created case id @{variables('NewCaseId')}"
                        },
                        "runAfter": {
                            "Extract_case_id": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Append_progress_created_metadata": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "ProgressText",
                            "value": ": created metadata"
                        },
                        "runAfter": {
                            "CRM_Create_Meta_Data": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Append_progress_org_id": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "ProgressText",
                            "value": ": got org id @{variables('OrganisationId')}"
                        },
                        "runAfter": {
                            "Extract_Org_Id": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Append_progress_year": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "ProgressText",
                            "value": ": got year @{variables('PayloadYear')}"
                        },
                        "runAfter": {
                            "Extract_year": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "CRM_Create_Case": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@{parameters('CrmBaseUrl')}/api/data/v9.2/incidents?$select=incidentid",
                            "method": "POST",
                            "headers": {
                                "Authorization": "Bearer @{body('Parse_Token_Response')?['access_token']}",
                                "Prefer": "return=representation"
                            },
                            "body": {
                                "caseorigincode": "100000002",
                                "casetypecode": "927350013",
                                "customerid_contact@odata.bind": "/contacts(65879706-0798-e411-9412-00155deb6486)",
                                "rpa_Contact@odata.bind": "/contacts(65879706-0798-e411-9412-00155deb6486)",
                                "rpa_Organisation@odata.bind": "/accounts(@{variables('OrganisationId')})",
                                "rpa_isunknowncontact": "true",
                                "rpa_isunknownorganisation": "false",
                                "title": "SFI @{variables('PayloadYear')} Payment Statement File - Sent to the Customer via Notify"
                            }
                        },
                        "runAfter": {
                            "Check_Org_Id": [
                                "SUCCEEDED"
                            ]
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        }
                    },
                    "CRM_Create_Meta_Data": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@{parameters('CrmBaseUrl')}/api/data/v9.2/rpa_activitymetadatas",
                            "method": "POST",
                            "headers": {
                                "Authorization": "Bearer @{body('Parse_Token_Response')?['access_token']}"
                            },
                            "body": {
                                "rpa_CustomerNotificationId@odata.bind": "/rpa_customernotifications(@{variables('NewActivityId')})",
                                "rpa_RelatedCase@odata.bind": "/incidents(@{variables('NewCaseId')})",
                                "rpa_contact@odata.bind": "/contacts(65879706-0798-e411-9412-00155deb6486)",
                                "rpa_direction": "false",
                                "rpa_docrefproxy": "SFIPS",
                                "rpa_fileabsoluteurl": "@{parameters('FfcRetrievalWorkflowEndpoint')}@{parameters('FfcRetrievalWorkflowSasToken')}&id=@{variables('Filename')}",
                                "rpa_filename": "@{variables('Filename')}",
                                "rpa_organisation@odata.bind": "/accounts(@{variables('OrganisationId')})",
                                "rpa_sbi": "@{body('Parse_Payload_JSON')?['sbi']}"
                            }
                        },
                        "runAfter": {
                            "Set_filename": [
                                "SUCCEEDED"
                            ]
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        }
                    },
                    "CRM_Create_Notification_Activity": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@{parameters('CrmBaseUrl')}/api/data/v9.2/rpa_customernotifications?$select=activityid",
                            "method": "POST",
                            "headers": {
                                "Authorization": "@{body('Parse_Token_Response')?['access_token']}",
                                "Prefer": "return=representation"
                            },
                            "body": {
                                "regardingobjectid_incident_rpa_customernotification@odata.bind": "/incidents(@{variables('NewCaseId')})",
                                "rpa_contact_rpa_customernotification@odata.bind": "/contacts(65879706-0798-e411-9412-00155deb6486)",
                                "rpa_datesent": "@{utcNow()}",
                                "rpa_documenttype_rpa_customernotification@odata.bind": "/rpa_documenttypeses(3de06e3d-2b5c-ed11-9562-0022489931ca)",
                                "rpa_hasattachment": "true",
                                "rpa_organisation_rpa_customernotification@odata.bind": "/accounts(@{variables('OrganisationId')})",
                                "subject": "SFI @{variables('PayloadYear')} Payment Statement File - Sent via Notify"
                            }
                        },
                        "runAfter": {
                            "Append_progress_case_id": [
                                "SUCCEEDED"
                            ]
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        }
                    },
                    "CRM_Lookup_Org": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@{parameters('CrmBaseUrl')}/api/data/v9.2/accounts?$select=name,accountid&$filter=rpa_capfirmid eq '@{body('Parse_Payload_JSON')?['frn']}'",
                            "method": "GET",
                            "headers": {
                                "Authorization": "Bearer @{body('Parse_Token_Response')?['access_token']}"
                            }
                        },
                        "runAfter": {
                            "Check_year": [
                                "SUCCEEDED"
                            ]
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        },
                        "trackedProperties": {}
                    },
                    "Check_Org_Id": {
                        "type": "If",
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@variables('OrganisationId')",
                                            ""
                                        ]
                                    }
                                }
                            ]
                        },
                        "actions": {},
                        "else": {
                            "actions": {
                                "Append_progress_invalid_org": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "ProgressText",
                                        "value": ": invalid org id"
                                    }
                                },
                                "Throw_error_invalid_org": {
                                    "type": "Compose",
                                    "inputs": "@int('__ERROR_INVALID_ORG__')",
                                    "runAfter": {
                                        "Append_progress_invalid_org": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                }
                            }
                        },
                        "runAfter": {
                            "Append_progress_org_id": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Check_year": {
                        "type": "If",
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@variables('PayloadYear')",
                                            ""
                                        ]
                                    }
                                }
                            ]
                        },
                        "actions": {},
                        "else": {
                            "actions": {
                                "Append_progress_invalid_year": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "ProgressText",
                                        "value": ": invalid year"
                                    },
                                    "trackedProperties": {}
                                },
                                "Throw_error_invalid_year": {
                                    "type": "Compose",
                                    "inputs": "@int('__ERROR_INVALID_YEAR__')",
                                    "runAfter": {
                                        "Append_progress_invalid_year": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                }
                            }
                        },
                        "runAfter": {
                            "Append_progress_year": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Complete_the_message": {
                        "type": "ServiceProvider",
                        "inputs": {
                            "parameters": {
                                "messageId": "@triggerBody()?['messageId']"
                            },
                            "serviceProviderConfiguration": {
                                "connectionName": "serviceBus",
                                "operationId": "completeMessage",
                                "serviceProviderId": "/serviceProviders/serviceBus"
                            }
                        },
                        "runAfter": {
                            "Append_progress_created_metadata": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Extract_Org_Id": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "OrganisationId",
                            "value": "@{outputs('Parse_Organisation_Details')?['body']?['value'][0]['accountid']}"
                        },
                        "runAfter": {
                            "Parse_Organisation_Details": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Extract_activity_id": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "NewActivityId",
                            "value": "@{body('CRM_Create_Notification_Activity')?['activityid']}"
                        },
                        "runAfter": {
                            "CRM_Create_Notification_Activity": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Extract_case_id": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "NewCaseId",
                            "value": "@{body('CRM_Create_Case')?['incidentid']}"
                        },
                        "runAfter": {
                            "CRM_Create_Case": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Extract_year": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "PayloadYear",
                            "value": "@{split(substring(body('Parse_Payload_JSON')?['apiLink'], lastIndexOf(body('Parse_Payload_JSON')?['apiLink'], '/')),'_')[3]}"
                        },
                        "runAfter": {
                            "Parse_Token_Response": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Get_CRM_Token": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@{parameters('AdLoginBaseUrl')}/@{parameters('PortalTenantId')}/oauth2/token",
                            "method": "POST",
                            "headers": {
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "body": "grant_type=client_credentials\n&client_id=@{parameters('PortalClientId')}\n&client_secret=@{encodeUriComponent(parameters('PortalClientSecret'))}\n&resource=@{encodeUriComponent(parameters('CrmBaseUrl'))}"
                        },
                        "runAfter": {
                            "If_JSON_is_valid": [
                                "SUCCEEDED"
                            ]
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            },
                            "secureData": {
                                "properties": [
                                    "inputs",
                                    "outputs"
                                ]
                            }
                        }
                    },
                    "If_JSON_is_valid": {
                        "type": "If",
                        "expression": {
                            "and": [
                                {
                                    "equals": [
                                        "@actions('Parse_Payload_JSON').status",
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "not": {
                                        "equals": [
                                            "@string(body('Parse_Payload_JSON')?['apiLink'])",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "not": {
                                        "equals": [
                                            "@string(body('Parse_Payload_JSON')?['sbi'])",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "not": {
                                        "equals": [
                                            "@string(body('Parse_Payload_JSON')?['frn'])",
                                            ""
                                        ]
                                    }
                                }
                            ]
                        },
                        "actions": {
                            "Append_to_string_variable": {
                                "type": "AppendToStringVariable",
                                "inputs": {
                                    "name": "ProgressText",
                                    "value": ": JSON is valid"
                                }
                            }
                        },
                        "else": {
                            "actions": {
                                "Append_progress_invalid_JSON": {
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "ProgressText",
                                        "value": ": Invalid JSON: @{triggerBody()?['contentData']}"
                                    }
                                },
                                "Throw_error_invalid_JSON": {
                                    "type": "Compose",
                                    "inputs": "@int('__ERROR_INVALID_JSON__')",
                                    "runAfter": {
                                        "Append_progress_invalid_JSON": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                }
                            }
                        },
                        "trackedProperties": {}
                    },
                    "Parse_Organisation_Details": {
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@body('CRM_Lookup_Org')",
                            "schema": {
                                "properties": {
                                    "@@odata.context": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "items": {
                                            "properties": {
                                                "@@odata.etag": {
                                                    "type": "string"
                                                },
                                                "accountid": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "@@odata.etag",
                                                "name",
                                                "accountid"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "runAfter": {
                            "CRM_Lookup_Org": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {}
                    },
                    "Parse_Token_Response": {
                        "type": "ParseJson",
                        "inputs": {
                            "content": "@body('Get_CRM_Token')",
                            "schema": {
                                "properties": {
                                    "access_token": {
                                        "type": "string"
                                    },
                                    "expires_in": {
                                        "type": "string"
                                    },
                                    "expires_on": {
                                        "type": "string"
                                    },
                                    "ext_expires_in": {
                                        "type": "string"
                                    },
                                    "not_before": {
                                        "type": "string"
                                    },
                                    "resource": {
                                        "type": "string"
                                    },
                                    "token_type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "runAfter": {
                            "Get_CRM_Token": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Set_filename": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "Filename",
                            "value": "@{substring(substring(body('Parse_Payload_JSON')?['apiLink'], lastIndexOf(body('Parse_Payload_JSON')?['apiLink'], '/')),1)}"
                        },
                        "runAfter": {
                            "Append_progess_activity_id": [
                                "SUCCEEDED"
                            ]
                        }
                    }
                },
                "runAfter": {
                    "Parse_Payload_JSON": [
                        "SUCCEEDED",
                        "TIMEDOUT",
                        "FAILED",
                        "SKIPPED"
                    ]
                },
                "trackedProperties": {}
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "PdfServiceUrl": {
                "type": "String",
                "value": "@appsetting('PdfServiceUrl')",
                "defaultValue": "@appsetting('PdfServiceUrl')"
            },
            "CrmBaseUrl": {
                "type": "String",
                "value": "@appsetting('CrmBaseUrl')",
                "defaultValue": "@appsetting('CrmBaseUrl')"
            },
            "AdLoginBaseUrl": {
                "type": "String",
                "value": "@appsetting('AdLoginBaseUrl')",
                "defaultValue": "@appsetting('AdLoginBaseUrl')"
            },
            "SharepointBaseUrl": {
                "type": "String",
                "value": "@appsetting('SharepointBaseUrl')",
                "defaultValue": "@appsetting('SharepointBaseUrl')"
            },
            "PortalClientId": {
                "type": "String",
                "value": "@appsetting('PortalClientId')",
                "defaultValue": "@appsetting('PortalClientId')"
            },
            "PortalTenantId": {
                "type": "String",
                "value": "@appsetting('PortalTenantId')",
                "defaultValue": "@appsetting('PortalTenantId')"
            },
            "PortalClientSecret": {
                "type": "String",
                "value": "@appsetting('PortalClientSecret')",
                "defaultValue": "@appsetting('PortalClientSecret')"
            },
            "SharepointClientId": {
                "type": "String",
                "value": "@appsetting('SharepointClientId')",
                "defaultValue": "@appsetting('SharepointClientId')"
            },
            "SharepointTenantId": {
                "type": "String",
                "value": "@appsetting('SharepointTenantId')",
                "defaultValue": "@appsetting('SharepointTenantId')"
            },
            "SharepointClientSecret": {
                "type": "String",
                "value": "@appsetting('SharepointClientSecret')",
                "defaultValue": "@appsetting('SharepointClientSecret')"
            },
            "UnknownContactId": {
                "type": "String",
                "value": "@appsetting('UnknownContactId')",
                "defaultValue": "@appsetting('UnknownContactId')"
            },
            "FfcRetrievalWorkflowSasToken": {
                "type": "String",
                "value": "@appsetting('FfcRetrievalWorkflowSasToken')",
                "defaultValue": "@appsetting('FfcRetrievalWorkflowSasToken')"
            },
            "FfcRetrievalWorkflowEndpoint": {
                "type": "String",
                "value": "@appsetting('FfcRetrievalWorkflowEndpoint')",
                "defaultValue": "@appsetting('FfcRetrievalWorkflowEndpoint')"
            }
        },
        "triggers": {
            "When_messages_are_available_in_a_topic_subscription_(peek-lock)": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "topicName": "ffc-pay-statement-crm-snd",
                        "subscriptionName": "crm",
                        "isSessionsEnabled": false
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "serviceBus",
                        "operationId": "peekLockTopicMessages",
                        "serviceProviderId": "/serviceProviders/serviceBus"
                    }
                },
                "splitOn": "@triggerOutputs()?['body']"
            }
        }
    },
    "kind": "Stateful"
}