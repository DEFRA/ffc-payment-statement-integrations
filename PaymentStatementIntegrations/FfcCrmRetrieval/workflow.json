{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Check_PDF": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@outputs('Get_PDF_from_service')?['statusCode']",
                                200
                            ]
                        }
                    ]
                },
                "actions": {
                    "Serve_PDF": {
                        "type": "Response",
                        "kind": "Http",
                        "inputs": {
                            "statusCode": 200,
                            "headers": {
                                "Content-Type": "application/pdf",
                                "Content-disposition": "inline"
                            },
                            "body": "@body('Get_PDF_from_service')"
                        }
                    }
                },
                "else": {
                    "actions": {
                        "Failed_Response": {
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": "@coalesce(outputs('Get_PDF_from_service')?['statusCode'], 400)",
                                "body": "Unable to get PDF content: @{body('Get_PDF_from_service')}"
                            },
                            "trackedProperties": {}
                        }
                    }
                },
                "runAfter": {
                    "Catch_Scope": [
                        "SUCCEEDED",
                        "TIMEDOUT",
                        "FAILED",
                        "SKIPPED"
                    ]
                },
                "trackedProperties": {}
            },
            "Try_Scope": {
                "type": "Scope",
                "actions": {
                    "Extract_referer": {
                        "type": "Compose",
                        "description": "Check URL link has been triggered from a CRM page as opposed to someone pasting URL into a browser",
                        "inputs": "@triggerOutputs()?['headers']?['Referer']"
                    },
                    "Is_call_from_CRM": {
                        "type": "If",
                        "expression": {
                            "and": [
                                {
                                    "startsWith": [
                                        "@string(outputs('Extract_referer'))",
                                        "@parameters('CrmBaseUrl')"
                                    ]
                                }
                            ]
                        },
                        "actions": {},
                        "else": {
                            "actions": {
                                "Invalid_response": {
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "statusCode": 400,
                                        "body": "Invalid request"
                                    }
                                },
                                "Terminate": {
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    },
                                    "runAfter": {
                                        "Invalid_response": [
                                            "SUCCEEDED"
                                        ]
                                    }
                                }
                            }
                        },
                        "runAfter": {
                            "Extract_referer": [
                                "SUCCEEDED",
                                "FAILED",
                                "TIMEDOUT",
                                "SKIPPED"
                            ]
                        }
                    },
                    "Get_PDF_from_service": {
                        "type": "Http",
                        "inputs": {
                            "uri": "@{parameters('PdfServiceUrl')}/statements/statement/@{trigger().outputs?.queries?.id}",
                            "method": "GET"
                        },
                        "runAfter": {
                            "Is_call_from_CRM": [
                                "SUCCEEDED"
                            ]
                        },
                        "runtimeConfiguration": {
                            "contentTransfer": {
                                "transferMode": "Chunked"
                            }
                        },
                        "trackedProperties": {
                            "file_id": "@{trigger().outputs?.queries?.id}",
                            "pdf_service_url": "@{parameters('PdfServiceUrl')}"
                        }
                    }
                },
                "runAfter": {
                    "Initialize_ErrorText": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Catch_Scope": {
                "type": "Scope",
                "actions": {
                    "Filter_array": {
                        "type": "Query",
                        "inputs": {
                            "from": "@result('Try_Scope')",
                            "where": "@equals(item()?['status'],'Failed')"
                        }
                    },
                    "Set_ErrorText_with_error": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "ErrorText",
                            "value": "@string(first(body('Filter_array')))"
                        },
                        "runAfter": {
                            "Filter_array": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Compose_for_logging": {
                        "type": "Compose",
                        "inputs": "@variables('ErrorText')",
                        "runAfter": {
                            "Set_ErrorText_with_error": [
                                "SUCCEEDED"
                            ]
                        },
                        "trackedProperties": {
                            "ErrorText": "@action()?['inputs']"
                        }
                    }
                },
                "runAfter": {
                    "Try_Scope": [
                        "TIMEDOUT",
                        "FAILED"
                    ]
                },
                "trackedProperties": {}
            },
            "Initialize_ErrorText": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "ErrorText",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "trackedProperties": {
                    "file_id": "@{trigger().outputs?.queries?.id}",
                    "pdf_service_url": "@{parameters('PdfServiceUrl')}"
                }
            }
        },
        "contentVersion": "1.1.0.0",
        "outputs": {},
        "triggers": {
            "HTTP_GET": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "method": "GET"
                }
            }
        },
        "parameters": {
            "PdfServiceUrl": {
                "type": "String",
                "value": "@appsetting('PdfServiceUrl')",
                "defaultValue": "@appsetting('PdfServiceUrl')"
            },
            "CrmBaseUrl": {
                "type": "String",
                "value": "@appsetting('CrmBaseUrl')",
                "defaultValue": "@appsetting('CrmBaseUrl')"
            },
            "AdLoginBaseUrl": {
                "type": "String",
                "value": "@appsetting('AdLoginBaseUrl')",
                "defaultValue": "@appsetting('AdLoginBaseUrl')"
            },
            "SharepointBaseUrl": {
                "type": "String",
                "value": "@appsetting('SharepointBaseUrl')",
                "defaultValue": "@appsetting('SharepointBaseUrl')"
            },
            "PortalClientId": {
                "type": "String",
                "value": "@appsetting('PortalClientId')",
                "defaultValue": "@appsetting('PortalClientId')"
            },
            "PortalTenantId": {
                "type": "String",
                "value": "@appsetting('PortalTenantId')",
                "defaultValue": "@appsetting('PortalTenantId')"
            },
            "PortalClientSecret": {
                "type": "String",
                "value": "@appsetting('PortalClientSecret')",
                "defaultValue": "@appsetting('PortalClientSecret')"
            },
            "SharepointClientId": {
                "type": "String",
                "value": "@appsetting('SharepointClientId')",
                "defaultValue": "@appsetting('SharepointClientId')"
            },
            "SharepointTenantId": {
                "type": "String",
                "value": "@appsetting('SharepointTenantId')",
                "defaultValue": "@appsetting('SharepointTenantId')"
            },
            "SharepointClientSecret": {
                "type": "String",
                "value": "@appsetting('SharepointClientSecret')",
                "defaultValue": "@appsetting('SharepointClientSecret')"
            },
            "UnknownContactId": {
                "type": "String",
                "value": "@appsetting('UnknownContactId')",
                "defaultValue": "@appsetting('UnknownContactId')"
            },
            "FfcRetrievalWorkflowSasToken": {
                "type": "String",
                "value": "@appsetting('FfcRetrievalWorkflowSasToken')",
                "defaultValue": "@appsetting('FfcRetrievalWorkflowSasToken')"
            },
            "FfcRetrievalWorkflowEndpoint": {
                "type": "String",
                "value": "@appsetting('FfcRetrievalWorkflowEndpoint')",
                "defaultValue": "@appsetting('FfcRetrievalWorkflowEndpoint')"
            },
            "FfcServiceBusTopic": {
                "type": "String",
                "value": "@appsetting('FfcServiceBusTopic')"
            },
            "SharepointSiteSubPath": {
                "type": "String",
                "value": "@appsetting('SharepointSiteSubPath')",
                "defaultValue": "@appsetting('SharepointSiteSubPath')"
            }
        }
    },
    "kind": "Stateful"
}